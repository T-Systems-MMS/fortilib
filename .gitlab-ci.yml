stages:
  - tests
  - docs
  - publish

variables:
  GIT_STRATEGY: clone
  PYTHONUNBUFFERED: '1'

#tests:
#  stage: tests
#  image: python:3.10-slim
#  before_script:
#    - pip install --no-cache-dir poetry
#    - poetry install
#  script:
#    - poetry run tox
#  artifacts:
#    when: always
#    reports:
#      junit: report.xml
#      codequality: gl-code-quality-report.json

pages:
  stage: docs
  image: python:3.11-slim
  before_script:
    - apt update && apt install -y graphviz
    - pip install --no-cache-dir poetry
    - poetry install
  script:
    - poetry run tox -edocs
  artifacts:
    paths:
      - public
  except:
    - schedules

#publish:
#  stage: publish
#  image: python:3.10-slim
#  before_script:
#    - pip install --no-cache-dir poetry
#    - poetry install
#    - poetry config repositories.gitlab https://git.mms-support.de/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
#    - poetry config http-basic.gitlab gitlab-ci-token ${CI_JOB_TOKEN}
#  script:
#    - poetry publish -r gitlab --build
